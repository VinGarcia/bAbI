
matcher number "[0-9]*";
matcher sentence "[a-zA-Z][a-zA-Z ]*";
matcher word "[a-zA-Z]*";
matcher name "[A-Z][a-z]*";

matcher move {
  "moved";
  "journeyed";
  "went back";
  "went";
  "travelled";
}

matcher place {
  "bathroom";
  "bedroom";
  "office";
  "hallway";
  "garden";
  "kitchen";
}

matcher pronoun { "he"; "she" };
matcher she { "Mary" return 1; "Sandra" return 1; }
matcher he { "Daniel" return 1; "John" return 1; }
pronoun["he"] = he;
pronoun["she"] = she;

matcher after {
  "Afterwards";
  "After that";
  "Following that";
  "Then";
}

Person = map();
function init() { this.where = "nowhere"; }
Person.__init__ = init;

memory = None
people = None
function reset() {
  'Recent memory:'
  memory = list()
  people = map()
}

hit=0
miss=0
function compare_results(guess, answer) {
  if (guess == answer) {
    hit = hit + 1;
  } else {
    miss = miss + 1
  }
}

matcher read {
  "(number); (name)n; (move)v; to the (place)p;." {
    if (people[n] == None) {
      people[n] = new(Person);
    }

    'Remember this person:'
    memory.push(n);
    people[n].where = p;
    finish True
  }

  "(number); (after); (pronoun)pn; (move); to the (place)p;." {

    'Find the name of the last `he` or `she`:'
    for(name in memory.reverse()) {
      'If the pronoun fits the name:'
      if(pronoun[pn].exec(name).len() > 0)
        break;
    }

    'Parse it recursively in a more simple format:'
    text = '1 %s moved to the %s.' % (name, p)
    read.exec(text);
    finish True;
  }

  "(number); Where is (name)n;? |(word)answer;|[0-9 ]*" {
    guess = people[n].where;
    compare_results(guess, answer);
    finish True;
  }
}

stories = list();

file = open('train11.txt')

'Collect data from all stories:'
for (line in file.readlines()) {
  if (line[0] == '1' && line[1] == ' ') {
    story = list()
    stories.push(story)
  }
  story.push(line);
}

'Parse and answer each story:'
for (story in stories) {
  reset();
  for (line in story) {
    "print(line)"
    if (read.exec(line).len() == 0) {
      print('missed this line: %s' % line)
    }
  }
}

print()
print('Done!');
print()
print('Total stories read: %s' % stories.len());
print('Total hits: %s' % hit);
print('Total miss: %s' % miss);
print()

